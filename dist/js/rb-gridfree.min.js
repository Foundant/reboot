var RBGridFree=function(){function e(t,s){void 0===s&&(s=null),this.$container=t,null!=s&&""!==s||(s=e.instanceCount.toString(),t.attr("data-gridfree-instance",s))
var i
0===$("#css-gridfree-"+s).length?(i=function(){var e=document.createElement("style")
return e.appendChild(document.createTextNode("")),e.type="text/css",e.id="css-gridfree-"+s,$(e).appendTo($("body")),e}(),e.styleSheets.push(i.sheet)):i=$("#css-gridfree-"+s)[0],this.instanceId=s.toString(),this.css=i.sheet,e.instanceCount++}return e.prototype.initialize=function(){if(this.$container.is("tr")&&this.$container.closest("table").css("table-layout","fixed"),null!=this.css.$blocks)return console.log("rb: initializing "+this.css.$blocks.length+" blocks already initialized"),this
this.css.$blocks=this.$container.children("[data-gridfree-fix],[data-gridfree-rel]"),console.log("rb: initializing "+this.css.$blocks.length+" blocks")
for(var t=0,s=0,i=0;i<this.css.$blocks.length;i++)null==$(this.css.$blocks[i]).attr("data-gridfree-block")&&$(this.css.$blocks[i]).attr("data-gridfree-block",e.blockCount),e.blockCount++
return this.css.$blocks.filter(function(){return $(this).data("gridfree-fix")}).each(function(e,s){t+=$(s).data("gridfree-fix")}),this.css.fixedTotal=t,this.css.$blocks.filter(function(){return $(this).data("gridfree-rel")}).each(function(e,t){s+=$(t).data("gridfree-rel")}),this.css.relativeTotal=s,console.log("rb: found "+t+" fix and "+s+" rel"),e.instances.push(this),this},e.prototype.resetResize=function(){this.css.resized=!1},e.prototype.resize=function(){if(!this.css.resized){for(this.css.resized=!0,console.log("rb: resizing "+this.css.$blocks.length+" blocks in instance "+this.instanceId);this.css.cssRules.length;)this.css.deleteRule(0)
for(var e=this.$container.width(),t=e-this.css.fixedTotal,s=0;s<this.css.$blocks.length;s++){var i=this.css.$blocks[s],n=$(i).data("gridfree-rel"),r=n/this.css.relativeTotal*t,c=$(i).data("gridfree-fix"),o=$(i).css("marginLeft")||"0px",a="0px - 2 * "+o
r&&(a+=" + "+r+"px"),c&&(a+=" + "+c+"px")
var l=this.$container.data("gridfree-instance"),d=$(i).data("gridfree-block")
this.css.insertRule('[data-gridfree-instance = "'+l+'"] [data-gridfree-block = "'+d+'"] {\n\t\t\t\t\twidth: calc('+a+");\n\t\t\t\t}",0)}}},e.instanceCount=0,e.blockCount=0,e.instances=new Array,e.styleSheets=new Array,e}()
RBCore.observe(".rb-gridfree",function(e){setTimeout(function(){var t=$(e).data("gridfree-instance"),s=new RBGridFree($(e),t)
s.initialize(),s.resize(),$(e).closest(".rb-tab").on("tab:open",function(){s.resetResize(),s.resize()})},0)}),$(window).resize(function(){RBGridFree.instances.forEach(function(e){e.resetResize()}),RBGridFree.instances.forEach(function(e){e.resize()})})
